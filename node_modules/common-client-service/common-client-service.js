// Общая библиотека Client
/* SQL Queries */
const SQL = {
  CLIENT: {
    FIND_PROFILE_BY_ID : `SELECT * FROM pa_client_service.profile  WHERE user_id = $1`,
    UPDATE_PROFILE_BY_ID : `
    INSERT INTO pa_client_service.profile (surname, name, patronymic, address, phone, user_id) VALUES ($1,$2,$3,$4,$5,$6)
      ON CONFLICT (user_id) 
      DO UPDATE SET
        surname = $1,
        name = $2,
        patronymic = $3,
        address = $4,
        phone = $5
    `,
    FIND_SUBSCRIPTIONS_BY_USER_ID : `
    SELECT
      s.subscription_id as "subscriptionId",
      s.subscription_name as "subscriptionName",
      s.subscription_description as "subscriptionDescription",
    CASE
        WHEN psr.blocked_at IS  NULL THEN TRUE
        ELSE FALSE
    END AS "isSubscribed"
    FROM
      pa_client_service.subscriptions s
    LEFT JOIN
      pa_client_service.profile_subscriptions_relation psr
      ON s.subscription_id = psr.subscription_id
      AND psr.user_id = $1
    ORDER BY
      s.subscription_id`, 
    UPDATE_SUBSCRIPTION_BY_USER_ID: `INSERT INTO pa_client_service.profile_subscriptions_relation as a 
      (user_id, subscription_id, created_at)
        VALUES ($1, $2, CURRENT_TIMESTAMP)
        ON CONFLICT (user_id, subscription_id) 
        DO update SET
        "blocked_at" = CASE
        WHEN $3 = false THEN NOW()
        ELSE null
      END
      RETURNING subscription_id
  `, 
// mediaId, mediaKey, userId, storage, bucket
    SET_PROFILE_IMAGE :`INSERT INTO pa_client_service.product_profile_media_storage (media_id, media_key, user_id, storage, bucket) VALUES ($1,$2,$3,$4,$5)
        ON CONFLICT (user_id) 
        DO update SET
         media_key = $2
	`,
    DELETE_PROFILE_IMAGE : `UPDATE pa_client_service.product_profile_media_storage set deleted=NOW() where media_id=$1 and user_id=$2 and deleted_at is null`, 
    GET_PROFILE_IMAGE : `select * from pa_client_service.product_profile_media_storage where user_id=$1 and deleted_at is null`, 

  },
};

const MESSAGES = {
   RU : {    
      INPUT_VALIDATION_ERROR: 'Ошибка проверки входных данных',
   }
}

/* Экспорт */
module.exports = {
  SQL, MESSAGES
};
